https://github.com/okovtun/BV_521.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIP4IcNHD37jcaLVmXEbFd1k

IEEE-754:
http://www.softelectro.ru/ieee754.html

TODO:
Реализовать следующие функции:
	??? StringLength(???);	//возвращает длину строки
	??? ToUpper(???);		//переводит строку в верхний регистр
	??? ToLower(???);		//переводит строку в нижний регистр

	void shrink(???);		//Удаляет лишние пробелы из предложения
							//Хорошо      живет     на     свете      Винни      Пух
							//Хорошо живет на свете Винни Пух

	??? is_palindrome(???);	//Проверяет, является ли строка палиндромом

	??? is_int_number(???);	//Проверяет, является ли строка целым десятичным числом
	???  to_int_number(???);//Если строка является целым десятичным числом, возвращает ее числовое значение
	??? is_bin_number(???);	//Проверяет, является ли строка двоичным числом
	???  bin_to_dec(????);	//Если строка является двоичным числом, возвращает ее десятичное значение
	??? is_hex_number(???);	//Проверяет, является ли строка шестнадцатеричным числом
	???  hex_to_dec(???);	//Если строка является шестнадцатеричным числом, возвращает ее десятичное значение

DONE:
1. Дошаблонить функции;
2. !!!!!!!!!!!! СДЕЛАТЬ COMMIT И PUSH в ветке 'DynamicTemplates' !!!!!!!!!!!!!!;
3. От ветки 'DynamicTemplates' создать ветку 'DynamicOptimisation',
   и в ней оптимизировать функции для работы с двумерными массивами;

DONE:
	??? Allocate(???);	//Выделяет память для двумерного динамического массива	
	??? Clear(???);		//Удаляет двумерный динамический массив из памяти		

	??? push_row_back(???);	//добавляет строку в конец двумерного динамического массива				DONE
	??? push_row_front(???);//добавляет строку в начало двумерного динамического массива			
	??? insert_row(???);	//вставляет строку в двумерный динамический массив по заданному индексу	

	??? pop_row_back(???);	//удаляет последнюю строку							
	??? pop_row_front(???);	//удаляет нулевую строку
	??? erase_row(???);		//удаляет строку по заданному индексу
	
	??? push_col_back(???);	//добавляет столбец в конец двумерного динамического массива			DONE
	??? push_col_front(???);//добавляет столбец в начало двумерного динамического массива
	??? insert_col(???);	//вставляет столбец в двумерный динамический массив по заданному индексу

	??? pop_col_back(???);	//удаляет последнюю столбец
	??? pop_col_front(???);	//удаляет нулевую столбец
	??? erase_col(???);		//удаляет столбец по заданному индексу

DONE:
0. Выучить теорию по указателям!!!!!!!
1. Выучить теорию по передаче параметров!!!!!!!
2. Выучить теорию по динамическим массивам!!!!!!!
3. В проект 'DynamicMemory' добавить функции:
	??? insert(???);	//добавляет значение в массив по заданному индексу
	??? erase(???);		//удаляет значение из массива по заданному индексу

DONE:
3. В Solution 'Pointers' добавить проект 'Split', и в этом проекте
   есть массив 'arr' из десяти элементов, заполненный случайными числами
   от 0 до 100. Нужно содзать еще два массива 'even' и 'odd' 
   минимально возможного размера. В массив 'even' скопировать все 
   четные значения, а в массив 'odd' - все нечетные значения из исходного массива;

DONE:
Перегрузить все шаблонные функции для двумерных массивов;

DONE:
1. В проекте 'Functions\Arrays' написать следующие функции:
	??? Sum(???);			//Возвращает сумму элементов массива;					DONE
	??? Avg(???);			//Возвращает среднее-арифметическое элементов массива;	DONE
	??? MinValueIn(???);	//Возвращает минимальное значение в массиве;			DONE		
	??? MaxValueIn(???);	//Возвращает максимальное значение в массиве;			DONE
	??? ShiftLeft(???);		//Циклически сдвигает массив на заданное количество элементов влево;	DONE
	??? ShiftRight(???);	//Циклически сдвигает массив на заданное количество элементов вправо;	DONE

2. Сделать commit, после чего перегрузить все вышеперечисленные функции для типов:
	float, double и char;

DONE:
0. Выучить теорию по функциям!!!
1. Написать функцию ??? Factorial(???), которая принимает число,
   и возвращает факториал этого числа;
2. Написать функцию ??? Power(???), которая возводит число в степень;

DONE:
1. Выполнить циклический сдвиг массива на заданное число элементов вправо;
2. В Solution 'Arrays' добавить проект 'Numerics', и в этом проекте, 
   десятичное число, введенное пользователем с клавиатуры перевести 
   в двоичную и шестнадцатеричную системы счисления;
3. В Solution 'Arrays' добавить проект 'Unique', и в этом проекте 
   массив из десяти элементов заполнить уникальными случайными числами 
   в диапазоне от 70 до 80.
4.* В Solution 'Arrays' добавить проект 'Repeats', и в этом проекте 
   есть массив из десяти элементов, заполненный случайными числами от 0 до 5.
   Нужно найти повторяющиеся значения в этом массиве, вывести их на экран,
   и для каждого повторяющегося значения вывести на экран количество повторений;
   ----------------------------------------------------------------------------------
5. В проекте '2Darrays' для двумерного массива найти:
	-сумму элементов массива;
	-среднее-арифметическое элементов массива;
	-минимальное и максимальное значение в массиве;
6. Сдвинуть двумерный массив на заданное число элементов влево и вправо;
7. *Отсортировать двумерный массив в порядке возрастания;
8. *В проекте 'Unique2' заполнить двумерный массив уникальными случайными числами;
9. **В проекте 'Repeats2' найти повторяющиеся элементы в двумерном массиве, 
   вывести их на экран, и вывести количество повторений для каждого;

DONE:
1. В проекте 'Arrays':
	- элементы массива должен вводить ползователь с клавиатуры;
	- вывести массив на экран в прямом порядке (от нулевого элемента до последнего);
	- вывести элементы массива на экран в обратном порядке (от последнего элемента до нулевого);
	- вычислить сумму и среднее-арифметическое элементов массива;
	- найти в массиве минимальное и максимальное значение;
   Все эти действия нужно выполнить над первоначально введенным массивом
   (для каждой задачи НЕ нужно создавать новый массив);
2. В Solution 'Arrays' добавить проект 'Shift', и в нем массив из десяти элементов,
   проинициализированный значениями 0, 1, 2 ...., 9 циклически сдвинуть на заданное число элементов влево
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9
	1, 2, 3, 4, 5, 6, 7, 8, 9, 0
	2, 3, 4, 5, 6, 7, 8, 9, 0, 1
	3, 4, 5, 6, 7, 8, 9, 0, 1, 2

3. Solution 'Arrays' залить на GitHub, и прислать в журнал ссылку на репозиторий;

DONE:
1. Напомнить про побитовые сдвиги;
2. Поменять местами две переменные без использования третьей при помощи побитовых операторов (RAID-5);
3. Оптимизировать большую Шахматную доску при помощи побитовых операторов;
4. Пользователь вводит число, в программа выводит на экран треуголник Паскаля заданной глубины;

DONE:
1. В Solution 'Control Structures' добавить проект 'Geometry', и в этом проекте 
   вывести в консоль фигуры из файла Geometry.txt:
	https://github.com/okovtun/BV_521/blob/master/ControlStructures/Geometry.txt
	---------------------------------------------------------
2. https://github.com/okovtun/BV_521/blob/master/ControlStructures/Picture/ChessBoard.jpg;	DONE
3. https://github.com/okovtun/BV_521/blob/master/ControlStructures/Picture/HardChess.jpg;

TODO:
1. Почитать про длинную арифметику;
2. Выучить про системы счисления:
	https://github.com/okovtun/BV_521/blob/master/NumericSystems.pdf

TODO:
1. Написать программу, которая вычисляет факториал числа, введенного с клавиатуры.	DONE
   Фактроиал - это произведение ряда чисел от 1 до указанного, например:	5! = 1*2*3*4*5;
2. Написать программу, которая возводит указанное число в указанную степень,		DONE
   основание и показатель степени вводятся с клавиатуры;
3. Вывести на экран таблицу ASCII-символов по 16 символов в строке;		DONE
4. Вывести на экран ряд Фибоначчи до указанного предела;				DONE		
5. Вывести на экран заданное количество чисел из ряда Фибоначчи;		DONE
6. Вывести на экран ряд простых чисел.									DONE
   Простым называется число, которое делится без остатка только на себя и на единицу;
7. Вывести на экран ряд совершенных чисел.
   Совершенным называется число, равное сумме всех своих делителей;
8. Вывести на экран таблицу Пифагора;

DONE:
1. Пользователь вводит номер автобусного билета, и программа говорит, билет счастливый, или обычный.
   Номер автобусного билета - это шестиразрядное число.
   Счастливым является билет, у которого сумма трех старших разрядов == сумме трех младших разрядов.
2. В Solution 'ControlSrtuctures' добавить проект 'Shooter', и в этом проекте, 
   пользователь нажимает на опреленные клавиши, а программа выводит на экран соответсвущее дуйствие:
	W - вперед;
	S - назад;
	A - влево;
	D - вправо;
	Space - прыжок;
	Enter - огонь;
	Escape - выход;
   Если пользователь нажал на клавишу, не описанную выше, на консоль выдается 'Error'.

DONE:
0. Повторяем теорию по операторам и типам данных;
1. Написать программу, которая определяет, является ли число палиндромом.
   Число вводит пользователь с клавиатуры.
   Палиндром - это число, которое читается одинаково как слева направо, так и справа налево,
   например: 12321, 1221;
   -------------------------------------------
2. Написать программу, которая вычисляет факториал числа, введенного с клавиатуры.
   Фактроиал - это произведение ряда чисел от 0 до указанного, например:
	5! = 1*2*3*4*5;
3. Написать программу, которая возводит указанное число в указанную степень,
   основание и показатель степени вводятся с клавиатуры;
4. Вывести на экран таблицу ASCII-символов по 16 символов в строке;
5. ***Вывести на экран ряд Фибоначчи до указанного предела;
6. ***Вывести на экран заданное количество чисел из ряда Фибоначчи;

DONE:
0. Повторяем теорию по операторам и типам данных;
1. Написать программу "Calc", которая вычисляет простейшие арифметические выражения,
   например: 2+3
   Выражение вводит пользователь с клавиатуры.
2. *** Написать программу, которая определяет, является ли число палиндромом.
   Число вводит пользователь с клавиатуры.
   Палиндром - это число, которое читается одинаково как слева направо, так и справа налево,
   например: 12321, 1221

TODO:
0. Выучить теорию;
	Следующие задачи необходимо решить без компилятора;
1. 
	int i = 3;
	i = ++i + ++i;
	cout << i << endl;	//???

2. 
	int i = 3;
	i = i++ + ++i;
	cout << i << endl;	//???

3. 
	int i = 3;
	i = i++ + 1 + ++i * 2;
	cout << i << endl;	//???

4. 
	int i = 3;
	i = i++ + 1 + ++i *= 2;
	cout << i << endl;	//???

5. 
	int i = 3;
	i += i++ + 1 + ++i *= 2;
	cout << i << endl;	//???

6. 
	int i = 3;
	i *= i++ + 1 + ++i += 2;
	cout << i << endl;	//???





DONE:
1. В отдельном проекте решить все задачи из файла:
	https://github.com/okovtun/BV_521/blob/master/VariablesTask.pdf

DONE:
1. Используя оператор sizeof() и макроопределения Visual Studio вывети на экран
   информацию о следующих типах: short, long, long long, float, double;

DONE:
2. Создать проект Elochka, и в нем вывести в консоль стишок "В лесу родилась Ёлочка".
   Стишок должен быть выровнен по середине окна консоли, и его куплеты должны быть 
   раздерены пустыми строками.
   В журнал прислать файл 'main.cpp';